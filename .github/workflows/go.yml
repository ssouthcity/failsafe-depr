name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
  
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Write config file
        working-directory: $GITHUB_WORKSPACE/infra
        run: echo ${{ secrets.FAILSAFE_CONFIG }} > config.json
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}
      
      - name: Terraform Format
        working-directory: $GITHUB_WORKSPACE/infra
        run: terraform fmt -check
        
      - name: Terraform Init
        working-directory: $GITHUB_WORKSPACE/infra
        run: terraform init
      
      - name: Terraform Validate
        working-directory: $GITHUB_WORKSPACE/infra
        run: terraform validate -no-color
        
      - name: Terraform Apply
        working-directory: $GITHUB_WORKSPACE/infra
        run: terraform apply -auto-approve
        env:
          TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
        
      - uses: digitalocean/action-doctl@v2.1.0
        with:
          token: ${{ secrets.DO_TOKEN }}
        
      - name: Start service
        run: doctl compute ssh $(terraform output -raw droplet_id) --access-token ${{ secrets.DO_TOKEN }} --ssh-command "systemctl restart failsafe.service"
